def save_tiktok_video(video_url, output_path, browser_name=None):
    if 'cookies' not in globals() and browser_name is None:
        raise BrowserNotSpecifiedError    
    tt_json = get_tiktok_json(video_url,browser_name)
    
    if tt_json is not None:
        video_id = list(tt_json['ItemModule'].keys())[0]
    
        regex_url = re.findall(url_regex, video_url)[0]
        if 'imagePost' in tt_json['ItemModule'][video_id]:
            slidecount = 1
            for slide in tt_json['ItemModule'][video_id]['imagePost']['images']:
                video_fn = regex_url.replace('/', '_') + '_slide_' + str(slidecount) + '.jpeg'
                tt_video_url = slide['imageURL']['urlList'][0]
                headers['referer'] = 'https://www.tiktok.com/'
                # include cookies with the video request
                tt_video = requests.get(tt_video_url, allow_redirects=True, headers=headers, cookies=cookies)
                with open(output_path, 'wb') as fn:
                    fn.write(tt_video.content)
                slidecount += 1
        else:
            regex_url = re.findall(url_regex, video_url)[0]
            tt_video_url = tt_json['ItemModule'][video_id]['video']['downloadAddr']
            headers['referer'] = 'https://www.tiktok.com/'
            # include cookies with the video request
            tt_video = requests.get(tt_video_url, allow_redirects=True, headers=headers, cookies=cookies)
        with open(output_path, 'wb') as fn:
            fn.write(tt_video.content)
        print("Saved video\n", tt_video_url, "\nto\n", output_path)    
    
    else:
        tt_json = alt_get_tiktok_json(video_url,browser_name)
        regex_url = re.findall(url_regex, video_url)[0]
        tt_video_url = tt_json["__DEFAULT_SCOPE__"]['webapp.video-detail']['itemInfo']['itemStruct']['video']['downloadAddr']
        headers['referer'] = 'https://www.tiktok.com/'
        # include cookies with the video request
        tt_video = requests.get(tt_video_url, allow_redirects=True, headers=headers, cookies=cookies)
        with open(output_path, 'wb') as fn:
            fn.write(tt_video.content)
        print("Saved video\n", video_url, "\nto\n", output_path)